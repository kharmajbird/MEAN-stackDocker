worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream angular_swarm {
        server 192.168.99.100;
        server 192.168.99.101;
        server 192.168.99.102;
        server 192.168.99.103;
        server 192.168.99.104;
    }
##    upstream go_swarm {
##        server 192.168.99.100:8080;
##        server 192.168.99.101:8080;
##        server 192.168.99.102:8080;
##        server 192.168.99.103:8080;
##        server 192.168.99.104:8080;
##    }
    upstream python_swarm {
        server 192.168.99.100:8000;
        server 192.168.99.101:8000;
        server 192.168.99.102:8000;
        server 192.168.99.103:8000;
        server 192.168.99.104:8000;
        server 192.168.99.105:8000;
        server 192.168.99.106:8000;
    }
    upstream elk {
        server 192.168.99.100:5601;
        server 192.168.99.101:5601;
        server 192.168.99.102:5601;
        server 192.168.99.103:5601;
        server 192.168.99.104:5601;
        server 192.168.99.105:5601;
        server 192.168.99.106:5601;
    }

    # for swarm visualizer @ http://localhost:8080
    upstream viz_masters {
        server 192.168.99.100:8080;
        server 192.168.99.101:8080;
        server 192.168.99.102:8080;
    }

    server {
        listen       80;
        server_name  localhost;

        location ~ /app/(?<kibana_uri>.*) {
           proxy_pass http://elk/app/$kibana_uri;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
        location ~ /bundles/(?<kibana_uri>.*) {
           proxy_pass http://elk/bundles/$kibana_uri;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
        location ~ /elasticsearch/(?<kibana_uri>.*) {
           proxy_pass http://elk/elasticsearch/$kibana_uri;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }


        location ~ /demo/(?<go_uri>.*) {
           proxy_pass http://angular_swarm/demo/$go_uri;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
        location / {
            proxy_pass http://angular_swarm;
        }
    }
    server {
        listen       8080;
        server_name  localhost;

        location / {
           proxy_pass http://viz_masters;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
    }
    server {
        listen       8000;
        ## server_name  localhost;

        location / {
           proxy_pass http://python_swarm;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
    }
}
