worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # 7 docker swarm nodes
    upstream swarm {
        server 192.168.99.100;
        server 192.168.99.101;
        server 192.168.99.102;
        server 192.168.99.103;
        server 192.168.99.104;
    }
    upstream elk {
        server 192.168.99.105:5601;
        server 192.168.99.106:5601;
    }

    # for swarm visualizer @ http://localhost:8088
    upstream masters_viz {
        server 192.168.99.100:8080;
        server 192.168.99.101:8080;
        server 192.168.99.102:8080;
    }

    server {
        listen       80;
        server_name  localhost;

        # works!
        location ~ /app/(?<kibana_uri>.*) {
           proxy_pass http://elk/app/$kibana_uri;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
        location ~ /bundles/(?<kibana_uri>.*) {
           proxy_pass http://elk/bundles/$kibana_uri;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
        location ~ /elasticsearch/(?<kibana_uri>.*) {
           proxy_pass http://elk/elasticsearch/$kibana_uri;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }

        # works!
        # Angular app
        location / {
            proxy_pass http://swarm;
        }
    }
    server {
        listen       8088;
        server_name  localhost;

        location / {
           proxy_pass http://masters_viz;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection 'upgrade';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }
    }
}
